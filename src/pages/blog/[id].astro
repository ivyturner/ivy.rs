---
import { render } from "astro:content";
import Prose from "~/components/ui/prose.astro";
import Layout from "~/layouts/Page.astro";
import { getBlogPosts } from "~/lib/content/blog";
import { formattedDate } from "~/lib/time";

export async function getStaticPaths() {
  const posts = await getBlogPosts();
  return posts.map((post) => ({
    params: { id: post.id },
    props: { post },
  }));
}
// 2. For your template, you can get the entry directly from the prop
const { post } = Astro.props;
const { Content } = await render(post);

const formatValue = (
  value: string | object | Array<string> | Date | boolean
): string => {
  if (Array.isArray(value)) {
    return value.join(", ");
  }
  
  if (value instanceof Date) {
    return formattedDate(value, false);
  }

  if (typeof value === "object" && value !== null) {
    return JSON.stringify(value, null, 2);
  }
  return String(value);
};

const ifKeyImportant = (key: string): boolean => {
  const importantKeys = ["title", "tldr"];
  return importantKeys.includes(key);
};
---

<Layout back={null}>
  <p class="text-gray text-sm">---</p>
  {
    Object.entries(post.data).map(([key, value]) => (
      <p
        class={
          (ifKeyImportant(key) && "text-yang text-base") || "text-gray text-sm"
        }
      >
        {key}: {formatValue(value)}
      </p>
    ))
  }
  <p class="text-gray text-sm">---</p>
  <div
    class="my-4"
  >
  <Prose>
    <Content />
  </Prose>
  </div>
  <a href={Astro.url.origin + Astro.url.pathname}>link to this page</a> -
  <a href="/blog">go back</a>
</Layout>
